function [X_normalized, mean_dox, std_dox] = normalize_paper1_monthly( X )
% This function normalizes a selected part of the inputs by applying 
% zero-mean and unit-variance.
% INPUT:    X: having 12 cols of the SWIFT-AI features
% OUTPUT:   erg_data: same size as data but with some features normalized
%
% Author: H. Mohn, Jan 2023
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Hard Coded Mean and StdDev of Training Set %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ind.Cly=1;
% ind.Bry=2;
% ind.NOy=3;
% ind.H2O=4;
% ind.O3=5;
%ind.z=6;

%ind.overhead=7;
%ind.t=8;
%ind.daylight=9;

%ind.O2_reaction_coef=10;
%ind.O3_reaction_coef=11;
%ind.ClOy_reaction_coef=12;
%ind.ClOx_reaction_coef=13;
mean_x = [
	1.38485120714804341974248669028431379945942580889095552265644073486328125e-09; ...
	1.13222413243481558143409391556269243117593958913857932202517986297607421875e-11; ...
	6.515347130330637408911711072785621912117903775651939213275909423828125e-09; ...
	5.9862281328753504726727409368525201216471032239496707916259765625e-06; ...
	2.8655890270906260041024193885306203810614533722400665283203125e-06; ...
	21388.810034761947463266551494598388671875; ...
	176.410857475960852980279014445841312408447265625; ...
	213.680001309165817247048835270106792449951171875; ...
	11.6926608931057653961715914192609488964080810546875; ...
	8.10106738856340776427172681224233891268682317132743264664895832538604736328125e-12; ...
	7.9506401678086660264090090866062610075459815561771392822265625e-05; ...
	1.2462176210910194264322621571228211223569815047085285186767578125e-05; ...
	0.002924590496580605110399364576778680202551186084747314453125; ...
	];
mean_dox = -1.6888350268600475404571753981872346550563435130243306048214435577392578125e-09;
std_x = [
	1.2698692608224107704626497950006237813713738660226226784288883209228515625e-09; ...
	8.96734468673826996897337732620532520233513906759981182403862476348876953125e-12; ...
	6.63656188646513425554977912666776429517767610377632081508636474609375e-09; ...
	4.8472649680279725526474247920827309599189902655780315399169921875e-06; ...
	2.85763277339223994096581264734435734453654731623828411102294921875e-06; ...
	6126.2261415963121180539019405841827392578125; ...
	72.7436905025401614466318278573453426361083984375; ...
	11.22511970434485562009285786189138889312744140625; ...
	3.25540636191771426410923595540225505828857421875; ...
	1.660249981639959384041154230124567002524482717262799269519746303558349609375e-11; ...
	6.3701511089187361756326632988844949068152345716953277587890625e-05; ...
	5.6405842980060895796418606040756316133411019109189510345458984375e-06; ...
	0.000615131407069070498296048388198187240050174295902252197265625; ...
	];
std_dox = 4.190034641138112764987603783319036754306807779357768595218658447265625e-08;

% (old matlab): copy all rows to have the same number as the data-set
mean_x = repmat( mean_x, 1, size(X, 2) );
std_x = repmat( std_x, 1, size(X, 2) );

  %%%%%%%%%%%%%%%%%
  % Normalization %
  %%%%%%%%%%%%%%%%%
X_normalized = X;
X_normalized(:,:) = (X_normalized(:,:) - mean_x) ./ std_x;
end